#!/bin/bash
# filepath: /workspaces/kind/repo-makefile/scripts/delete-project.sh

set -e

# Eliminar un proyecto existente en ArgoCD
delete_project() {
    echo "üóëÔ∏è Eliminando un proyecto existente en ArgoCD..."

    # Listar proyectos disponibles y permitir selecci√≥n por n√∫mero
    echo "‚ÑπÔ∏è  Proyectos disponibles en ArgoCD:"
    PROJECTS=$(argocd proj list --output name 2>/dev/null)
    if [[ -z "$PROJECTS" ]]; then
        echo "‚ùå Error: No se encontraron proyectos en ArgoCD o el comando fall√≥."
        exit 1
    fi

    # Mostrar proyectos con √≠ndices
    PROJECT_ARRAY=()
    while IFS= read -r line; do
        PROJECT_ARRAY+=("$line")
    done <<< "$PROJECTS"

    for i in "${!PROJECT_ARRAY[@]}"; do
        echo "$((i + 1))) ${PROJECT_ARRAY[$i]}"
    done

    # Solicitar selecci√≥n del proyecto
    read -p "Selecciona el n√∫mero del proyecto a eliminar: " PROJECT_INDEX
    if ! [[ "$PROJECT_INDEX" =~ ^[0-9]+$ ]] || ((PROJECT_INDEX < 1 || PROJECT_INDEX > ${#PROJECT_ARRAY[@]})); then
        echo "‚ùå Error: Selecci√≥n inv√°lida."
        exit 1
    fi

    PROJECT_NAME="${PROJECT_ARRAY[$((PROJECT_INDEX - 1))]}"
    echo "üóëÔ∏è Proyecto seleccionado: $PROJECT_NAME"

    # Confirmar eliminaci√≥n
    read -p "¬øEst√°s seguro de que deseas eliminar el proyecto '$PROJECT_NAME'? (s√≠/si/no): " CONFIRMATION
    if [[ "$CONFIRMATION" != "s√≠" && "$CONFIRMATION" != "si" ]]; then
        echo "‚ùå Operaci√≥n cancelada."
        exit 1
    fi

    # Eliminar el proyecto
    if ! argocd proj delete "$PROJECT_NAME"; then
        echo "‚ùå Error: Fall√≥ al eliminar el proyecto '$PROJECT_NAME'."
        exit 1
    fi

    echo "‚úÖ Proyecto '$PROJECT_NAME' eliminado exitosamente."
}

# Ejecutar la funci√≥n de eliminaci√≥n
delete_project